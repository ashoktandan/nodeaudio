<html>
<head>
    <title>Stream to Wav</title>
    <script src="https://cdn.jsdelivr.net/binaryjs/0.2.1/binary.min.js"></script>
    </head>
    <body onclick=start()>
        <h1>client</h1>
        <audio autoplay></audio>
        
        <script>
function start(){
  var client = new BinaryClient('ws://localhost:9001');

             var soundController = {};
  var audioContext = window.AudioContext || window.webkitAudioContext;

soundController.speakerContext = new audioContext();
  
client.on('open', function() {

  client.on('stream', function (stream) {
    soundController.nextTime = 0;
    var init = false;
    var audioCache = [];
  
    console.log('>>> Receiving Audio Stream');
  
    stream.on('data', function (data) {
      var array = new Float32Array(data);
      var buffer = soundController.speakerContext.createBuffer(1, 2048, 44100);
      buffer.copyToChannel(array, 0);
      audioCache.push(buffer);
      // make sure we put at least 5 chunks in the buffer before starting
      if ((init === true) || ((init === false) && (audioCache.length > 5))) { 
          init = true;
          soundController.playCache(audioCache);
      }
    });
    stream.on('end', function() {
      console.log('audio chat ended');
    });
  });
  });
  soundController.playCache = function (cache) {
  document.getElementsByTagName('audio').srcObject=buffer;

    while (cache.length) {
      var buffer = cache.shift();
      var source    = soundController.speakerContext.createBufferSource();
      source.buffer = buffer;
      source.connect(soundController.speakerContext.destination);
      if (soundController.nextTime == 0) {
          // add a delay of 0.05 seconds
          soundController.nextTime = soundController.speakerContext.currentTime + 0.05;  
      }
      source.start(soundController.nextTime);
      // schedule buffers to be played consecutively
      soundController.nextTime+=source.buffer.duration;  
    }
  };
}
        </script>
            </body>
            </html>